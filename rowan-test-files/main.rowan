module main;

import std::console::Console;
import std::collections::arraylist::ArrayList;


class Main {

    static thing: u64 = 66666666666;

    fn main(args: [String]) {
        let arr: [u64] = [1, 2, 3];
        let printer: Printer = new Printer();
        let q: u64 = 0;
        Main::map(arr, |x: u64| -> u64 {
            let string: String = "calling lambda";
            Console::println(string);
            q = q + 1;
            printer.println-int(q);

            printer.println-int(x + 2);
            return x + 2;
        })
        printer.println-int(q)
        let list: ArrayList[u64] = new ArrayList[u64]();
        list.buffer = [];
        list.length = 0;
        list.add(q)
    }

    fn fib(n: u64) -> u64 {
        if n <= 1 {
            return n
        }
        return Main::fib(n - 1) + Main::fib(n - 2)
    }

    fn thrash() {
        let i: u64 = 0;
        while i < 10 {
            let x: [u64] = new [u64; 1];
            i = i + 1;
        }
    }

    fn map(arr: [u64], f: fn(u64) -> u64) -> [u64] {
        let i: u64 = 0;
        let out: [u64] = new[u64; arr.len()];
        while i < arr.len() {
            out[i] = f.call(arr[i]);
            i = i + 1;
        }
        return out;
    }

}